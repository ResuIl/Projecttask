@model Projecttask.Models.ViewModels.AllTagsAndUsersViewModel

<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
	<div class="modal-dialog" role="document">
		<div class="modal-content">
			<input type="hidden" id="userId" />
			<div class="modal-header">
				<h5 class="modal-title" id="exampleModalLabel">Enter Price and Message</h5>
				<button type="button" class="close" data-dismiss="modal" aria-label="Close">
					<span aria-hidden="true">&times;</span>
				</button>
			</div>
			<div class="modal-body">
				<form>
					<div class="form-group">
						<label for="price">Price:</label>
						<input type="number" class="form-control" id="price">
					</div>
					<div class="form-group">
						<label for="message">Message:</label>
						<textarea class="form-control" id="message" rows="4"></textarea>
					</div>
				</form>
			</div>
			<div class="modal-footer">
				<button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
				<button type="button" class="btn btn-primary" onclick="saveData()">Send</button>
			</div>
		</div>
	</div>
</div>

<div class="container-fluid">
	<div class="row">
		@{
			if (Model.Users.Count > 0)
			{
				<div class="col-12">
					<div class="mb-3">
						<h5>Filter by Tags:</h5>
						@foreach (var tag in Model.Tags)
						{

							<label class="checkbox-inline">
								<input type="checkbox" class="tag-filter" data-tag="@tag.Name"> @tag.Name
							</label>
						}
					</div>
				</div>
				foreach (var user in Model.Users)
				{
							<div class="col-12 col-sm-6 col-lg-4 mb-4">
								<div class="card p-3 py-4 rounded">
									<div class="text-center">
										<img src="@user.User.ProfilePhoto" width="100" class="rounded-circle">
										<h3 class="mt-2">@user.User.UserName</h3>
										<span class="mt-1 d-block">@user.User.City</span>

										<div class="row mt-3">
											<div class="col-4">
												<h5>Projects</h5>
												<span class="num">10</span>
											</div>
											<div class="col-4">
												<h5>Projects</h5>
												<span class="num">10</span>
											</div>
											<div class="col-4">
												<h5>Projects</h5>
												<span class="num">10</span>
											</div>
										</div>

										<hr class="line">

										<p class="mt-4" style="max-height: 150px!important; text-overflow: ellipsis; overflow: hidden;">@user.User.About</p>

										@foreach (var tag in user.Tags)
								{
											<span class="badge badge-primary bg-danger">@tag.Name</span>
								}

										<div class="profile mt-4">
											@* <a href="@Url.Action("Profile", "Employer", new { userid = user.User.Id })" class="btn profile_button px-4 btn-primary">Make An Offer</a> *@
											<button type="button" class="btn btn-primary" data-toggle="modal" data-target="#myModal" onclick="openModal('@user.User.Id')">
												Make an offer
											</button>

										</div>
									</div>
								</div>

							</div>
				}
			} else
			{
						<h1>Qeydiyyatli ischi yoxdu.</h1>
			}
		}
	</div>
</div>



<script>

	$(".tag-filter").change(function () {
		filterProfiles();
	});

	function filterProfiles() {
		var selectedTags = [];
		$(".tag-filter:checked").each(function () {
			selectedTags.push($(this).data("tag"));
		});

		$(".card").each(function () {
			var profileTags = $(this).find(".badge").map(function () {
				return $(this).text();
			}).get();

			if (selectedTags.length === 0 || selectedTags.some(tag => profileTags.includes(tag))) {
				$(this).show();
			} else {
				$(this).hide();
			}
		});
	}

	function openModal(userId) {
		document.getElementById("userId").value = userId;
	}

	function saveData() {

		var price = document.getElementById("price").value;
		var message = document.getElementById("message").value;
		var userId = document.getElementById("userId").value;
		$('.close').click();

		makeOffer(price, message, userId);

		


		async function makeOffer(_price, _message, _userId) {
			const response = await fetch("/Employer/MakeOffer", {
				method: "POST",
				headers: {
					'Accept': 'application/json',
					'Content-Type': 'application/json'
				},
				body: JSON.stringify({ OfferPrice: _price, Message: _message, WorkerId: _userId })
			}).then(response => {
				if (!response.ok) {
					throw new Error(`HTTP error! Status: ${response.status}`);
				}
				Swal.fire(
					'Offer Created!',
					'Your offer succesfully sent to worker.',
					'success'
				)
			}).catch(error => {
				Swal.fire({
					icon: 'error',
					title: 'Oops...',
					text: 'Something went wrong!'
				})
				console.error("Error:", error);
			})
		}	
	}
</script>