@{
    var isEditing = false;
}

<section class="h-100 gradient-custom-2">
    <div class="container py-5 h-100">
        <div class="row d-flex justify-content-center align-items-center h-100">
            <div class="col col-lg-9 col-xl-7">
                <div class="card">
                    <div class="rounded-top text-white d-flex flex-row" style="background-color: #000; height: 200px;">
                        <div class="ms-4 mt-5 d-flex flex-column" style="width: 150px;">
                            <img src="https://mdbcdn.b-cdn.net/img/Photos/new-templates/bootstrap-profiles/avatar-1.webp"
                                 alt="Generic placeholder image" class="img-fluid img-thumbnail mt-4 mb-2"
                                 style="width: 150px; z-index: 1">
                            <button id="editBtn" type="button" class="btn btn-outline-dark" data-mdb-ripple-color="dark"
                                     style="z-index: 1;">
                                @if (@ViewData["isEditing"].ToString().ToLower() == "true")
                                {
                                    <span onclick="SaveProfile()">Save Profile</span>
                                }
                                else
                                {
                                    <span onclick="EditProfile()">Edit Profile</span>
                                }
                            </button>
                        </div>
                        <div class="ms-3" style="margin-top: 130px;">
                            <h5>
                                @if (@ViewData["isEditing"].ToString().ToLower() == "true")
                                {
                                    <input type="text" id="usernameInput" class="form-control" value="@ViewData["Username"]" />
                                }
                                else
                                {
                                    @ViewData["Username"];
                                }
                            </h5>
                            <p>
                                @if (@ViewData["isEditing"].ToString().ToLower() == "true")
                                {
                                    <input type="text" id="cityInput" class="form-control" value="@ViewData["City"]" />
                                }
                                else
                                {
                                    @ViewData["City"];
                                }
                            </p>
                        </div>
                    </div>
                    <div class="p-4 text-black" style="background-color: #f8f9fa;">
                        <div class="d-flex justify-content-end text-center py-1">
                            <div>
                                <p class="mb-1 h5">253</p>
                                <p class="small text-muted mb-0">Photos</p>
                            </div>
                            <div class="px-3">
                                <p class="mb-1 h5">1026</p>
                                <p class="small text-muted mb-0">Followers</p>
                            </div>
                            <div>
                                <p class="mb-1 h5">478</p>
                                <p class="small text-muted mb-0">Following</p>
                            </div>
                        </div>
                    </div>
                    <div class="card-body p-4 text-black">
                        <div class="mb-5">
                            <p class="lead fw-normal mb-1">About</p>
                            <div class="p-4" style="background-color: #f8f9fa;">
                                <p>
                                    @if (@ViewData["isEditing"].ToString().ToLower() == "true")
                                    {
                                        <textarea style="width: 100%; height:150px; resize: none;" id="about">@ViewData["About"]</textarea>
                                    }
                                    else
                                    {
                                        @ViewData["About"];
                                    }
                                </p>
                                <p>
                                    @{
                                        var tag = ViewData["Tags"] as List<Projecttask.Models.Tag>;

                                        @foreach (var defaulTag in ViewData["DefaultTags"] as List<Projecttask.Models.Tag>)
                                        {
                                            if (tag.Where(tag => tag.Name == defaulTag.Name).Count() > 0)
                                            {
                                                <span onclick="RemoveTag('@defaulTag.Name')" class="badge badge-primary bg-danger" style="cursor: pointer;">@defaulTag.Name</span>
                                            }
                                            else
                                            {
                                                <span onclick="AddTag('@defaulTag.Name')" class="badge badge-primary bg-dark" style="cursor: pointer;">@defaulTag.Name</span>
                                            }
                                        }
                                    }
                                </p>
                                
                            </div>
                            
                        </div>
                        <div class="d-flex justify-content-between align-items-center mb-4">
                            <p class="lead fw-normal mb-0">Recent photos</p>
                            <p class="mb-0"><a href="#!" class="text-muted">Show all</a></p>
                        </div>
                        <div class="row g-2">
                            <div class="col mb-2">
                                <img src="https://mdbcdn.b-cdn.net/img/Photos/Lightbox/Original/img%20(112).webp"
                                     alt="image 1" class="w-100 rounded-3">
                            </div>
                            <div class="col mb-2">
                                <img src="https://mdbcdn.b-cdn.net/img/Photos/Lightbox/Original/img%20(107).webp"
                                     alt="image 1" class="w-100 rounded-3">
                            </div>
                        </div>
                        <div class="row g-2">
                            <div class="col">
                                <img src="https://mdbcdn.b-cdn.net/img/Photos/Lightbox/Original/img%20(108).webp"
                                     alt="image 1" class="w-100 rounded-3">
                            </div>
                            <div class="col">
                                <img src="https://mdbcdn.b-cdn.net/img/Photos/Lightbox/Original/img%20(114).webp"
                                     alt="image 1" class="w-100 rounded-3">
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

@section Scripts {
    <script>

        async function SaveProfile() {
            let username = document.getElementById("usernameInput");
            let city = document.getElementById("cityInput");
            let about = document.getElementById("about");

            const data = {
                UserName: username.value,
                City: city.value,
                About: about.value
            };

            const response = await fetch("/Worker/SavePage", {
                method: "POST",
                headers: {
                    'Accept': 'application/json',
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(data)
            });

            setTimeout(function () {
                location.reload();
            }, 300)
        };

        async function AddTag(tagname) {
            const response = await fetch("/Worker/AddTag", {
                method: "POST",
                headers: {
                    'Accept': 'application/json',
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ tagName: tagname })
            });

            setTimeout(function () {
                location.reload();
            }, 300)
        }

        async function RemoveTag(tagname) {
            const response = await fetch("/Worker/RemoveTag", {
                method: "POST",
                headers: {
                    'Accept': 'application/json',
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ tagName: tagname })
            });

            setTimeout(function () {
                location.reload();
            }, 300)
        }

        async function EditProfile() {
            const response = await fetch("/Worker/EditPage", {
                method: "POST",
                headers: {
                    'Accept': 'application/json',
                    'Content-Type': 'application/json'
                },
            });

            setTimeout(function () {
                location.reload();
            }, 300)
        };

    </script>
}